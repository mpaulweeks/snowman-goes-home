{"version":3,"sources":["utils/moves.ts","fe/AudioPlayer.tsx","utils/level.ts","utils/point.ts","utils/gen.ts","utils/world.ts","utils/stopwatch.ts","redux/actionTypes/index.ts","redux/reducers/index.ts","redux/actions/index.ts","redux/index.ts","fe/common.ts","fe/GameView.tsx","fe/sprite.ts","fe/MenuView.tsx","fe/ScoreView.tsx","fe/manager.ts","fe/App.tsx","script/index.ts","index.js"],"names":["Move","_AudioPlayer","elm","fixedVolume","prevProps","this","volume","props","audio","playing","play","pause","currentTime","_this2","url","react_default","a","createElement","loop","src","ref","React","Component","AudioPlayer","connect","store","Block","Moves","Object","keys","filter","k","isNaN","Number","map","PointHistory","point","points","moves","classCallCheck","createClass","key","value","newPoint","move","push","_this","m","history","clone","toConsumableArray","join","Level","width","height","start","win","blocks","blocksByKey","reduce","lookup","b","toString","loc","equals","x","y","current","traveled","next","Left","Right","Up","Down","Error","concat","isIllegalPoint","isWinningPoint","visited","queue","length","shift","getNextMoves","forEach","applyMove","addMove","grid","_loop","row","_loop2","char","SolvableLevel","level","soln","PlayableLevel","solved","hero","moveInfo","Point","other","str","parts","split","parseFloat","range","n","arr","i","randomInRange","min","max","Math","random","Difficulty","BlockAllocator","spaces","index","floor","splice","Generator","settings","numBlocks","_this$settings","minMovesOptions","allocator","pop","_","solution","solve","includes","tries","_this$settings2","blockPercentMin","blockPercentMax","levels","attempts","triesPerMutation","tryGenerateLevel","Stopwatch","milliseconds","arguments","undefined","started","Date","getTime","getElapsed","getRemaining","time","SongsByDifficulty","_SongsByDifficulty","defineProperty","Easy","Medium","Hard","Infinite","ProgressionByDifficulty","_ProgressionByDifficu","gridSize","minMoves","levelsPerTier","totalLevels","secondsPerLevel","BasicWorld","dimensions","difficulty","progression","loaded","onLoad","registerLoaded","Promise","resolve","reject","startTime","isInfinite","FiniteWorld","possibleConstructorReturn","getPrototypeOf","call","levelsByMoves","obj","num","sort","remainingMinMoves","getLevelKeys","scaledDimensions","generateLevels","l","tier","apply","_this3","InfiniteWorld","_this4","lastIndex","_this$levels","gen","console","log","WorldLoader","loaders","d","w","toLoad","SET_GAME_OVER","SET_LEVEL","SET_TIMER","SET_WORLD","TOGGLE_MUSIC","initialState","isMobile","check","navigator","userAgent","vendor","window","opera","test","substr","mobilecheck","secondsRemaining","secondsElapsed","world","isGameOver","reducer","state","action","type","objectSpread","payload","stopwatch","formatElapsed","formatRemaining","setTimer","setWorld","createStore","rootReducer","AbsoluteContainer","styled","div","_templateObject","Row","_templateObject2","Column","_templateObject3","LoadingButton","_templateObject4","ReadyButton","_templateObject5","KeyButton","_templateObject6","Container","GameView_templateObject","SubContainer","GameView_templateObject2","Header","GameView_templateObject3","Footer","GameView_templateObject4","CanvasContainer","GameView_templateObject5","CanvasOverlay","GameView_templateObject6","_GameView","_this$props","gm","toggleMusic","_this$props$store","onClick","mouseMove","children","clickReset","clickToggleGrid","GameView","loadImage","img","Image","image","onload","spriteImages","heroLeft","heroRight","groundIce1","groundIce2","groundIce3","groundIce4","groundIce5","groundIce6","groundIce7","groundIce8","groundIce9","treeLight","treeHeavy","igloo","Sprites","all","values","s","then","WorldOptionContainer","MenuView_templateObject","GameTitle","h1","MenuView_templateObject2","WorldOption","MenuView_templateObject3","WorldTitle","h2","MenuView_templateObject4","WorldButton","h3","MenuView_templateObject5","defaultState","_defaultState","spritesLoaded","_MenuView","reset","setState","worldLoader","displayOrder","getLoaderByDifficulty","displayName","loadWorld","href","MenuView","_ScoreView","onReset","unsetWorld","currentLevelIndex","ScoreView","Color","moveMap","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","GameManager","dispatch","worldDimensions","canvasDimensions","canvasElm","ctx","currentLevel","spriteFacing","loadedAssets","pendingAnimations","shouldDrawGrid","evt","rect","target","getBoundingClientRect","clientX","left","clientY","top","px","py","isTopRight","isTopLeft","handleMove","clickUp","clickDown","clickLeft","clickRight","screenHeight","document","body","clientHeight","screenWidth","clientWidth","addEventListener","e","code","nextLevel","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","draw","getState","triggerGameOver","loadInBackground","requestAnimationFrame","stop","getContext","createStopwatch","moveHero","animateMove","_nextLevel","_callee2","_context2","loadLevel","sent","printMoves","addTime","_this$pendingAnimatio","animations","slice","t","sprite","scale","blockWidth","blockHeight","drawImage","alpha","oldAlpha","globalAlpha","drawSprite","_draw","_callee3","_y","_x","_context3","abrupt","fillStyle","fillRect","strokeStyle","beginPath","moveTo","lineTo","stroke","opacity","getPercent","drawSpriteWithOpacity","block","App_templateObject","Canvas","canvas","App_templateObject2","_App","canvasRef","createRef","setup","App_Container","App","script","testLevelGen","l1","print","l2","scripts","ReactDOM","render","es","getElementById"],"mappings":"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","file":"static/js/main.e7f0c7d1.chunk.js","sourcesContent":["import { Point } from \"./point\";\n\nexport enum Move {\n  Up = 1,\n  Down,\n  Left,\n  Right,\n};\nexport const Moves = Object\n  .keys(Move)\n  .filter(k => isNaN(Number(k)))\n  .map(k => Move[k]);\n\nexport interface PotentialMove {\n  move: Move,\n  history: PointHistory,\n};\n\nexport class PointHistory {\n  point: Point;\n  points: Array<Point>;\n  moves: Array<Move>;\n\n  constructor(point: Point, points: Array<Point>, moves: Array<Move>) {\n    this.point = point;\n    this.points = points;\n    this.moves = moves;\n  }\n\n  addMove(newPoint: Point, move: Move) {\n    this.points.push(this.point);\n    this.moves.push(move);\n    this.point = newPoint;\n  }\n\n  getNextMoves(): Array<PotentialMove> {\n    return Moves\n      .map(m => ({\n        move: m,\n        history: this.clone(),\n      }));\n  }\n\n  clone() {\n    return new PointHistory(\n      this.point,\n      [...this.points],\n      [...this.moves]\n    );\n  }\n\n  printMoves() {\n    return this.moves.map(k => Move[k]).join(', ');\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AudioState } from '../redux/reducers';\n\ninterface Props {\n  audio: AudioState;\n};\ninterface State {};\n\nclass _AudioPlayer extends React.Component<Props, State> {\n  elm?: HTMLAudioElement;\n  fixedVolume = false;\n\n  componentDidUpdate(prevProps) {\n    if (this.elm) {\n      if (!this.fixedVolume) {\n        this.elm.volume = 0.5;\n        this.fixedVolume = true;\n      }\n      if (this.props.audio.playing) {\n        this.elm.play();\n      } else {\n        this.elm.pause();\n        this.elm.currentTime = 0;\n      }\n    }\n  }\n  render() {\n    const { url } = this.props.audio;\n    return (\n      <audio\n        loop\n        src={url}\n        ref={elm => this.elm = elm}\n      ></audio>\n    );\n  }\n}\n\nexport const AudioPlayer = connect(\n  (store: DataState) => ({\n    audio: store.audio,\n  })\n)(_AudioPlayer);\n","// https://repl.it/@mpaulweeks/ice\n\nimport { Move, PointHistory } from './moves';\nimport { Point } from './point';\n\nexport interface Traveled {\n  move: Move,\n  point: Point,\n}\n\nexport interface MoveInformation {\n  point: Point,\n  traveled: Array<Traveled>,\n}\n\nexport enum Block {\n  Start = 1,\n  Win,\n  Block,\n}\n\ninterface BlockLookup {\n  [key: string]: Block;\n};\n\nexport class Level {\n  width: number;\n  height: number;\n  start: Point;\n  win: Point;\n  blocks: Array<Point>;\n  blocksByKey: BlockLookup = {};\n\n\n  constructor(width: number, height: number, start: Point, win: Point, blocks: Array<Point>) {\n    this.width = width;\n    this.height = height;\n    this.start = start;\n    this.win = win;\n    this.blocks = blocks;\n\n    this.blocksByKey = this.blocks.reduce(\n      (lookup: BlockLookup, b) => {\n        lookup[b.toString()] = Block.Block;\n        return lookup;\n      },\n      {}\n    );\n  }\n\n  isWinningPoint(loc: Point): boolean {\n    return this.win.equals(loc);\n  }\n  isIllegalPoint(loc: Point): boolean {\n    const { blocksByKey, width, height } = this;\n    const hitBlock = !!blocksByKey[loc.toString()];\n    return hitBlock || (\n      (loc.x < 0) ||\n      (loc.x >= width) ||\n      (loc.y < 0) ||\n      (loc.y >= height)\n    );\n  }\n  applyMove(point: Point, move: Move): MoveInformation {\n    let current = point;\n    const traveled = [{\n      move: move,\n      point: current,\n    }];\n    while (true) {\n      const next = current.clone();\n\n      if (move === Move.Left) next.x--;\n      else if (move === Move.Right) next.x++;\n      else if (move === Move.Up) next.y--;\n      else if (move === Move.Down) next.y++;\n      else throw new Error(`unexpected move: ${move}`);\n\n      if (this.isIllegalPoint(next)) {\n        break;\n      }\n      traveled.push({move: move, point: next});\n      current = next;\n      if (this.isWinningPoint(current)) {\n        break;\n      }\n    }\n    return {\n      point: current,\n      traveled: traveled,\n    };\n  }\n  solve(): PointHistory | null {\n    const spawn = new PointHistory(this.start, [], []);\n    const visited: { [key: string]: boolean } = {};\n    const queue = [spawn];\n    while (queue.length) {\n      const next = queue.shift() as PointHistory;\n      const key = next.point.toString();\n      if (!visited[key]) {\n        visited[key] = true;\n        if (this.isWinningPoint(next.point)) {\n          return next;\n        }\n        let nextMoves = next.getNextMoves();\n        nextMoves.forEach(m => {\n          const { move, history } = m;\n          const newPoint = this.applyMove(history.point, move).point;\n          history.addMove(newPoint, move);\n          queue.push(history);\n        });\n      }\n    }\n    return null;\n  }\n\n  print(): string {\n    const { width, height, start, win, blocks } = this;\n    const grid: Array<Array<string>> = [];\n    for (let y = 0; y < height; y++) {\n      const row: Array<string> = [];\n      for (let x = 0; x < width; x++) {\n        let char = '_';\n        if (win.x === x && win.y === y) {\n          char = 'W';\n        }\n        if (start.x === x && start.y === y) {\n          char = 'S';\n        }\n        blocks.forEach(b => {\n          if (b.x === x && b.y === y) {\n            char = '0';\n          }\n        });\n        row.push(char);\n      }\n      grid.push(row);\n    }\n    return grid.map(row => row.join('')).join('\\n');\n  }\n}\n\nexport class SolvableLevel {\n  level: Level;\n  soln: PointHistory;\n  constructor(level: Level, soln: PointHistory) {\n    this.level = level;\n    this.soln = soln;\n  }\n}\n\nexport class PlayableLevel {\n  level: Level;\n  soln: PointHistory;\n  hero: PointHistory;\n\n  constructor(solved: SolvableLevel) {\n    this.level = solved.level;\n    this.soln = solved.soln;\n    this.hero = new PointHistory(this.level.start, [], []);\n  }\n\n  reset(): void {\n    this.hero = new PointHistory(this.level.start, [], []);\n  }\n\n  moveHero(move: Move): MoveInformation {\n    const { level, hero } = this;\n    const moveInfo = level.applyMove(hero.point, move);\n    hero.addMove(moveInfo.point, move);\n    return moveInfo;\n  }\n}\n","\nexport class Point {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n  clone() {\n    return new Point(this.x, this.y);\n  }\n  toString() {\n    return `${this.x},${this.y}`;\n  }\n  equals(other: Point) {\n    return this.toString() === other.toString();\n  }\n\n  static fromString(str: string) {\n    const parts = str.split(',');\n    return new Point(parseFloat(parts[0]), parseFloat(parts[1]));\n  }\n};\n","import { Level, SolvableLevel } from \"./level\";\nimport { Point } from \"./point\";\n\nexport function range(n: number): Array<number> {\n  let arr: Array<number> = [];\n  for (let i = 0; i < n; i++) {\n    arr.push(i);\n  }\n  return arr;\n}\n\nexport function rangeFrom(start: number, length: number): Array<number> {\n  return range(length).map(i => i + start);\n}\n\nfunction randomInRange(min: number, max: number) {\n  return min + (Math.random() * (max - min));\n}\n\nexport class BlockAllocator {\n  spaces: Array<Point> = [];\n\n  constructor(width: number, height: number) {\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        this.spaces.push(new Point(x, y));\n      }\n    }\n  }\n\n  pop(): Point {\n    const index = Math.floor(Math.random() * this.spaces.length);\n    return this.spaces.splice(index, 1)[0];\n  }\n}\n\nexport interface GeneratorSettings {\n  width: number;\n  height: number;\n  blockPercentMin: number;\n  blockPercentMax: number;\n  minMovesOptions: Array<number>;\n}\n\nexport class Generator {\n  settings: GeneratorSettings;\n\n  constructor(settings: GeneratorSettings) {\n    this.settings = settings;\n  }\n\n  tryGenerateLevel(numBlocks: number): (SolvableLevel | null) {\n    const { width, height, minMovesOptions } = this.settings;\n    const allocator = new BlockAllocator(width, height);\n    const win = allocator.pop();\n    const start = allocator.pop();\n    const blocks = range(numBlocks).map(_ => allocator.pop());\n    const level = new Level(width, height, start, win, blocks);\n    const solution = level.solve();\n    return solution && minMovesOptions.includes(solution.moves.length) ? new SolvableLevel(level, solution) : null;\n  }\n\n  generateLevels(max: number, tries: number): Array<SolvableLevel> {\n    const {\n      width,\n      height,\n      blockPercentMin,\n      blockPercentMax,\n    } = this.settings;\n    const levels: Array<SolvableLevel> = [];\n    let attempts = 0;\n    const triesPerMutation = Math.min(tries / 10, 100);\n    while (levels.length < max && attempts < tries) {\n      const numBlocks = width * height * randomInRange(blockPercentMin, blockPercentMax);\n      for (let i = 0; levels.length < max && i < triesPerMutation; i++) {\n        attempts += 1;\n        const level = this.tryGenerateLevel(numBlocks);\n        if (level) {\n          levels.push(level);\n        }\n      }\n    }\n    // console.log(attempts);\n    return levels;\n  }\n}\n","import { Generator, range, rangeFrom } from \"./gen\";\nimport { SolvableLevel } from \"./level\";\nimport { Point } from \"./point\";\nimport { Stopwatch } from \"./stopwatch\";\n\nexport enum Difficulty {\n  Easy = 1,\n  Medium,\n  Hard,\n  Infinite,\n  // Test,\n};\n\nexport const SongsByDifficulty = {\n  [Difficulty.Easy]: 'music/visager_village_dreaming.mp3',\n  [Difficulty.Medium]: 'music/visager_the_final_road.mp3',\n  [Difficulty.Hard]: 'music/visager_the_great_forest.mp3',\n  [Difficulty.Infinite]: 'music/visager_dark_sanctum.mp3',\n};\n\n// race against time to get far, then get score based on how quick\nexport interface Progression {\n  gridSize: (number),\n  minMoves: number;\n  levelsPerTier: number;\n  totalLevels: number;\n  secondsPerLevel?: number;\n}\n\nconst ProgressionByDifficulty = {\n  [Difficulty.Easy]: {\n    gridSize: 1,\n    minMoves: 7,\n    levelsPerTier: 1,\n    totalLevels: 5,\n  },\n  [Difficulty.Medium]: {\n    gridSize: 1.5,\n    minMoves: 12,\n    levelsPerTier: 1,\n    totalLevels: 10,\n  },\n  [Difficulty.Hard]: {\n    gridSize: 2,\n    minMoves: 12,\n    levelsPerTier: 2,\n    totalLevels: 15,\n  },\n  [Difficulty.Infinite]: {\n    gridSize: 1.5,\n    minMoves: 7,\n    levelsPerTier: 3,\n    totalLevels: 20,\n    secondsPerLevel: 5,\n  },\n}\n\nexport interface LevelsByMoves {\n  [minMoves: number]: Array<SolvableLevel>;\n}\n\nexport interface World {\n  difficulty: Difficulty;\n  totalLevels: number;\n  progression: Progression;\n  loaded: boolean;\n  onLoad: Promise<World>;\n  displayName: () => string;\n  isInfinite: () => boolean;\n  createStopwatch: () => Stopwatch;\n  generateLevels: () => void;\n  loadLevel: (i: number) => Promise<SolvableLevel | undefined>;\n}\n\nclass BasicWorld implements World {\n  dimensions: Point;\n  difficulty: Difficulty;\n  totalLevels: number;\n  progression: Progression;\n  loaded = false;\n  onLoad: Promise<World>;\n  registerLoaded = () => { };\n\n  constructor(dimensions: Point, difficulty: Difficulty) {\n    this.dimensions = dimensions;\n    this.difficulty = difficulty;\n    this.progression = ProgressionByDifficulty[difficulty];\n    this.onLoad = new Promise((resolve, reject) => {\n      this.registerLoaded = () => resolve(this);\n    });\n    this.totalLevels = this.progression.totalLevels;\n  }\n  displayName() {\n    return Difficulty[this.difficulty];\n  }\n  isInfinite() {\n    return this.difficulty === Difficulty.Infinite;\n  }\n  createStopwatch() {\n    const secondsPerLevel = this.progression.secondsPerLevel || 0;\n    const startTime = 1000 * (60 - secondsPerLevel);\n    // const startTime = 5; // for testing infinite mode\n    return new Stopwatch(this.isInfinite() ? startTime : undefined);\n  }\n\n  generateLevels() {\n    throw new Error('base class');\n  }\n  loadLevel(index: number): Promise<SolvableLevel | undefined> {\n    throw new Error('base class');\n  }\n}\n\nclass FiniteWorld extends BasicWorld {\n  levelsByMoves: LevelsByMoves;\n\n  constructor(dimensions: Point, difficulty: Difficulty) {\n    super(dimensions, difficulty);\n    this.levelsByMoves = range(this.progression.totalLevels / this.progression.levelsPerTier)\n      .reduce((obj: LevelsByMoves, num) => {\n        obj[num + this.progression.minMoves] = [];\n        return obj;\n      }, {});\n  }\n\n  getLevelKeys() {\n    // for some reason, array.sort() on numbers will sort like strings\n    function compareNums(a: number, b: number) {\n      if (a < b) return -1;\n      if (a > b) return 1;\n      return 0;\n    }\n    return Object.keys(this.levelsByMoves).map(parseFloat).sort(compareNums);\n  }\n\n  generateLevels() {\n    const { dimensions, levelsByMoves, progression } = this;\n    const { gridSize, levelsPerTier } = progression;\n    const remainingMinMoves = this.getLevelKeys().filter(k => levelsByMoves[k].length < levelsPerTier);\n    if (remainingMinMoves.length === 0) {\n      this.loaded = true;\n      this.registerLoaded();\n      return;\n    }\n    const scaledDimensions = new Point(dimensions.x * gridSize, dimensions.y * gridSize);\n    const gen = new Generator({\n      width: scaledDimensions.x,\n      height: scaledDimensions.y,\n      blockPercentMin: 0.05,\n      blockPercentMax: 0.3,\n      minMovesOptions: remainingMinMoves,\n    })\n    const levels = gen.generateLevels(500, 500);\n    levels.forEach(l => {\n      const tier = levelsByMoves[l.soln.moves.length];\n      if (tier && tier.length < levelsPerTier) {\n        tier.push(l);\n      }\n    });\n  }\n\n  async loadLevel(index: number) {\n    while (!this.loaded) {\n      this.generateLevels();\n    }\n    const levels = this.getLevelKeys().reduce((arr: Array<SolvableLevel>, key) => {\n      arr.push(...this.levelsByMoves[key]);\n      return arr;\n    }, []);\n    return levels[index];\n  }\n}\n\nclass InfiniteWorld extends BasicWorld {\n  levels: Array<SolvableLevel> = [];\n  lastIndex = 0;\n\n  constructor(dimensions: Point) {\n    super(dimensions, Difficulty.Infinite);\n  }\n\n  generateLevels() {\n    const { dimensions, levels, progression, lastIndex } = this;\n    const { gridSize } = progression;\n    if (levels.length > lastIndex + 10) {\n      this.loaded = true;\n      this.registerLoaded();\n      return;\n    }\n    // todo randomize gridSize, minMoves\n    const scaledDimensions = new Point(dimensions.x * gridSize, dimensions.y * gridSize);\n    const gen = new Generator({\n      width: scaledDimensions.x,\n      height: scaledDimensions.y,\n      blockPercentMin: 0.05,\n      blockPercentMax: 0.3,\n      minMovesOptions: rangeFrom(progression.minMoves, 10),\n    })\n    this.levels.push(...gen.generateLevels(10, 10));\n    if (levels.length > lastIndex + 10) {\n      console.log('infinite loaded!');\n    }\n  }\n\n  async loadLevel(index: number) {\n    while (index > this.levels.length) {\n      this.generateLevels();\n    }\n    this.lastIndex = index;\n    return this.levels[index];\n  }\n}\n\nexport class WorldLoader {\n  loaders: Array<World>;\n\n  constructor(dimensions: Point) {\n    this.loaders = [\n      new InfiniteWorld(dimensions),\n      ...[\n        Difficulty.Easy,\n        Difficulty.Medium,\n        Difficulty.Hard,\n      ].map(d => new FiniteWorld(dimensions, d)),\n    ];\n  }\n\n  getLoaderByDifficulty(difficulty: Difficulty) {\n    return this.loaders.filter(w => w.difficulty === difficulty)[0];\n  }\n\n  loadInBackground() {\n    const toLoad = this.loaders.filter(w => !w.loaded)[0];\n    if (toLoad) {\n      toLoad.generateLevels();\n      if (toLoad.loaded) {\n        console.log('loaded:', Difficulty[toLoad.difficulty]);\n      }\n    }\n  }\n}\n","export class Stopwatch {\n  started: Date;\n  milliseconds: number;\n\n  constructor(milliseconds = 0) {\n    this.started = new Date();\n    this.milliseconds = milliseconds;\n  }\n\n  getElapsed(): number {\n    return new Date().getTime() - this.started.getTime();\n  }\n  getRemaining(): number {\n    return this.milliseconds - this.getElapsed();\n  }\n  getPercent(): number {\n    return this.getRemaining() / this.milliseconds;\n  }\n  addTime(time: number) {\n    this.milliseconds += time;\n  }\n  formatElapsed(): string {\n    return Math.floor(this.getElapsed() / 1000).toString(10);\n  }\n  formatRemaining(): string {\n    return Math.floor(this.getRemaining() / 1000).toString(10);\n  }\n}\n","export const SET_GAME_OVER = 'SET_GAME_OVER';\nexport const SET_LEVEL = 'SET_LEVEL';\nexport const SET_TIMER = 'SET_TIMER';\nexport const SET_WORLD = 'SET_WORLD';\nexport const TOGGLE_MUSIC = 'TOGGLE_MUSIC';\n","import { Stopwatch, SongsByDifficulty, World } from \"../../utils\";\nimport { SET_GAME_OVER, SET_LEVEL, SET_TIMER, SET_WORLD, TOGGLE_MUSIC } from \"../actionTypes\";\n\n// https://stackoverflow.com/a/11381730\nconst mobilecheck = function() {\n  var check = false;\n  //eslint-disable-next-line\n  (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\n  return check;\n};\n\nexport interface AudioState {\n  playing: boolean;\n  url: string;\n}\nexport interface DataState {\n  audio: AudioState,\n  isMobile: boolean;\n  world?: World;\n  secondsElapsed: number;\n  secondsRemaining: number;\n  level: number;\n  isGameOver: boolean;\n}\n\ninterface DataAction {\n  type: string;\n  payload: {\n    stopwatch?: Stopwatch;\n    level?: number;\n    world?: World;\n  };\n}\n\nconst initialState: DataState = {\n  audio: {\n    playing: true,\n    url: '',\n  },\n  isMobile: mobilecheck(),\n  secondsRemaining: 0,\n  secondsElapsed: 0,\n  level: 0,\n  world: undefined,\n  isGameOver: false,\n};\n\nfunction reducer(state = initialState, action: DataAction) {\n  switch (action.type) {\n    case SET_GAME_OVER: {\n      return {\n        ...state,\n        isGameOver: true,\n      };\n    }\n    case SET_LEVEL: {\n      const { level } = action.payload;\n      return {\n        ...state,\n        level,\n      };\n    }\n    case SET_TIMER: {\n      const { stopwatch } = action.payload;\n      return {\n        ...state,\n        secondsElapsed: stopwatch && stopwatch.formatElapsed(),\n        secondsRemaining: stopwatch && stopwatch.formatRemaining(),\n      };\n    }\n    case SET_WORLD: {\n      const { world } = action.payload;\n      return {\n        ...state,\n        isGameOver: false,\n        world,\n        audio: {\n          ...state.audio,\n          url: world ? SongsByDifficulty[world.difficulty] : state.audio.url,\n        },\n      };\n    }\n    case TOGGLE_MUSIC: {\n      return {\n        ...state,\n        audio: {\n          ...state.audio,\n          playing: !state.audio.playing,\n        },\n      };\n    }\n    default:\n      return state;\n  }\n}\n\n\nexport default reducer;\n","import { Stopwatch, World } from '../../utils';\nimport { SET_GAME_OVER, SET_LEVEL, SET_TIMER, SET_WORLD, TOGGLE_MUSIC } from '../actionTypes';\n\nexport const setGameOver = () => ({\n  type: SET_GAME_OVER,\n  payload: {},\n});\n\nexport const setLevel = (level: number) => ({\n  type: SET_LEVEL,\n  payload: {\n    level,\n  },\n});\n\nexport const setTimer = (stopwatch: Stopwatch) => ({\n  type: SET_TIMER,\n  payload: {\n    stopwatch,\n  },\n});\n\nexport const setWorld = (world?: World) => ({\n  type: SET_WORLD,\n  payload: {\n    world,\n  },\n});\n\nexport const toggleMusic = () => ({\n  type: TOGGLE_MUSIC,\n  payload: {},\n});\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nexport const store = createStore(rootReducer);\nexport * from './actions';\nexport * from './reducers';\n","import styled from 'styled-components';\n\nexport const AbsoluteContainer = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  z-index: 1;\n  width: 100%;\n  height: 100vh;\n\n  background-color: var(--background);\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: stretch;\n  flex-wrap: nowrap;\n`;\nexport const Column = styled(Row)`\n  flex-direction: column;\n`;\n\nexport const LoadingButton = styled.div`\n  width: 4em;\n  padding: 0.5em;\n  border-radius: 1em;\n\n  border: 2px solid grey;\n  font-style: italic;\n  color: grey;\n  background-color: var(--background);\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: nowrap;\n\n`;\nexport const ReadyButton = styled(LoadingButton)`\n  cursor: pointer;\n\n  border-color: var(--foreground);\n  font-style: normal;\n  color: var(--foreground);\n\n  &:hover {\n    color: var(--background);\n    background-color: var(--foreground);\n  }\n`;\n\nexport const KeyButton = styled(ReadyButton)`\n  height: 4vh;\n  width: auto;\n  min-width: 2em;\n  padding: 0 0.75em;\n  margin: 0 0.3em;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { DataState, toggleMusic } from '../redux';\nimport { connect } from 'react-redux';\nimport { GameManager } from './manager';\nimport { Row, Column, KeyButton } from './common';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  flex-wrap: nowrap;\n`;\n\nconst SubContainer = styled(Row)`\n  width: 100%;\n  margin: 0px;\n`;\nconst Header = styled(SubContainer)`\n  height: 10vh;\n  font-family: monospace;\n  font-size: 1.2em;\n  font-weight: bold;\n`;\nconst Footer = styled(SubContainer)`\n  height: 10vh;\n`;\n\nconst CanvasContainer = styled.div`\n  position: relative;\n`;\n\nconst CanvasOverlay = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n  background-image: url('img/snow_loose.gif');\n  background-size: contain;\n  background-repeat: none;\n`;\n\ninterface Props {\n  gm: GameManager;\n  store: DataState;\n  toggleMusic: () => void;\n};\n\nclass _GameView extends React.Component<Props> {\n  render() {\n    const { gm, toggleMusic } = this.props;\n    const { isMobile, world, level, secondsRemaining, secondsElapsed } = this.props.store;\n    return (\n      <Container>\n        <Header>\n          <Column>\n            <div>Level {level + 1}</div>\n          </Column>\n          <Column>\n            <div>{world && world.isInfinite() ? secondsRemaining : secondsElapsed}s</div>\n          </Column>\n        </Header>\n        <CanvasContainer onClick={gm.mouseMove}>\n          {this.props.children}\n          <CanvasOverlay />\n        </CanvasContainer>\n        <Footer>\n          <Column>\n            <KeyButton onClick={gm.clickReset}>reset level</KeyButton>\n          </Column>\n          {!isMobile && (\n            <Column>\n              <KeyButton onClick={toggleMusic}>toggle music</KeyButton>\n            </Column>\n          )}\n          <Column>\n            <KeyButton onClick={gm.clickToggleGrid}>toggle grid</KeyButton>\n          </Column>\n        </Footer>\n      </Container>\n    );\n  }\n}\n\n\nexport const GameView = connect(\n  (store: DataState) => ({\n    store,\n  }),\n  {\n    toggleMusic,\n  }\n)(_GameView);\n","\n\nexport interface Sprite {\n  image: HTMLImageElement;\n  loaded: Promise<boolean>;\n}\n\nexport interface SpriteManager {\n  loaded: Promise<boolean>,\n  hero: Sprite;\n  groundIce1: Sprite,\n  groundIce2: Sprite,\n  groundIce3: Sprite,\n  groundIce4: Sprite,\n  groundIce5: Sprite,\n  groundIce6: Sprite,\n  groundIce7: Sprite,\n  groundIce8: Sprite,\n  groundIce9: Sprite,\n  treeLight: Sprite,\n  treeHeavy: Sprite,\n  igloo: Sprite,\n};\n\nfunction loadImage(url: string) {\n  const img = new Image();\n  const state: Sprite = {\n    image: img,\n    loaded: new Promise((resolve, reject) => {\n      img.onload = () => resolve(true);\n    }),\n  };\n  img.src = url;\n  return state;\n}\n\n// load sprites\nconst spriteImages = {\n  heroLeft: loadImage('sprite/snowman_left.png'),\n  heroRight: loadImage('sprite/snowman_right.png'),\n  groundIce1: loadImage('sprite/ground_ice_1.png'),\n  groundIce2: loadImage('sprite/ground_ice_2.png'),\n  groundIce3: loadImage('sprite/ground_ice_3.png'),\n  groundIce4: loadImage('sprite/ground_ice_4.png'),\n  groundIce5: loadImage('sprite/ground_ice_5.png'),\n  groundIce6: loadImage('sprite/ground_ice_6.png'),\n  groundIce7: loadImage('sprite/ground_ice_7.png'),\n  groundIce8: loadImage('sprite/ground_ice_8.png'),\n  groundIce9: loadImage('sprite/ground_ice_9.png'),\n  treeLight: loadImage('sprite/tree_light.png'),\n  treeHeavy: loadImage('sprite/tree_heavy.png'),\n  igloo: loadImage('sprite/igloo.png'),\n};\nexport const Sprites: SpriteManager = {\n  ...spriteImages,\n  loaded: Promise.all(Object.values(spriteImages).map(s => s.loaded)).then(() => true),\n};\nwindow.Sprites = Sprites;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { World, Difficulty } from '../utils';\nimport { connect } from 'react-redux';\nimport { DataState } from '../redux/reducers';\nimport { GameManager } from './manager';\nimport { Sprites } from './sprite';\nimport { AbsoluteContainer, LoadingButton, ReadyButton } from './common';\n\nconst WorldOptionContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nconst GameTitle = styled.h1`\n  margin-bottom: 0px;\n`;\n\nconst WorldOption = styled.div`\n  padding: 0.5em;\n  margin: 0.5em;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  flex-wrap: nowrap;\n\n  background-color: #eeeeee;\n  border-radius: 1em;\n`;\nconst WorldTitle = styled.h2`\n  margin: 0.5rem;\n`;\nconst WorldButton = styled.h3`\n  margin: 0px;\n  margin-top: 0.5em;\n`;\n\n\ninterface Props {\n  gm: GameManager;\n  store: DataState;\n};\n\ninterface State {\n  spritesLoaded: boolean,\n  [Difficulty.Easy]: boolean,\n  [Difficulty.Medium]: boolean,\n  [Difficulty.Hard]: boolean,\n  [Difficulty.Infinite]: boolean,\n};\n\nconst defaultState = {\n  spritesLoaded: false,\n  [Difficulty.Easy]: false,\n  [Difficulty.Medium]: false,\n  [Difficulty.Hard]: false,\n  [Difficulty.Infinite]: false,\n};\n\nclass _MenuView extends React.Component<Props, State> {\n  state = { ...defaultState };\n\n  componentDidMount() {\n    this.reset();\n    Sprites.loaded.then(() => {\n      this.setState({spritesLoaded: true});\n      console.log('sprites loaded');\n    });\n  }\n  reset() {\n    this.setState({\n      ...defaultState,\n    }, () => {\n      this.props.gm.worldLoader.loaders.forEach(world => {\n        world.onLoad.then(() => {\n          this.setState({\n            [world.difficulty]: true,\n          });\n        });\n      });\n    });\n  }\n  loadWorld(world: World) {\n    if (world.loaded) {\n      this.props.gm.setWorld(world);\n      this.reset();\n    }\n  }\n\n  render() {\n    const { store } = this.props;\n    const { state } = this;\n    const { worldLoader } = this.props.gm;\n    if (store.world) {\n      return '';\n    }\n    const displayOrder = [\n      Difficulty.Easy,\n      Difficulty.Medium,\n      Difficulty.Hard,\n      Difficulty.Infinite,\n    ];\n    return (\n      <AbsoluteContainer>\n        <GameTitle>\n          <em>ice slide puzzle</em>\n          <br/>\n          <img src=\"sprite/igloo.png\"/><img src=\"sprite/snowman_left.png\"/>\n        </GameTitle>\n        <WorldOptionContainer>\n          {displayOrder.map(d => worldLoader.getLoaderByDifficulty(d)).map(world => (\n            <WorldOption key={world.difficulty}>\n              <WorldTitle>\n                {world.displayName()}\n              </WorldTitle>\n              <div>\n                {world.isInfinite() ? '∞' : world.totalLevels} levels\n              </div>\n              <WorldButton>\n                {state[world.difficulty] ? (\n                  <ReadyButton onClick={() => this.loadWorld(world)}>\n                    PLAY\n                </ReadyButton>\n                ) : (\n                    <LoadingButton>\n                      loading\n                </LoadingButton>\n                  )}\n              </WorldButton>\n            </WorldOption>\n          ))}\n        </WorldOptionContainer>\n        <p>\n          made by <a href=\"https://twitter.com/mpaulweeks\">@mpaulweeks</a>\n          <br/>\n          assets by <a href=\"https://www.kenney.nl\">Kenney</a>\n          <br/>\n          music by <a href=\"https://visager.bandcamp.com/album/songs-from-an-unmade-world\">Visager</a>\n        </p>\n      </AbsoluteContainer>\n    );\n  }\n}\n\nexport const MenuView = connect(\n  (store: DataState) => ({\n    store,\n  })\n)(_MenuView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { DataState } from '../redux/reducers';\nimport { GameManager } from './manager';\nimport { AbsoluteContainer, Row, ReadyButton } from './common';\n\ninterface Props {\n  gm: GameManager;\n  store: DataState;\n};\ninterface State {};\n\nclass _ScoreView extends React.Component<Props, State> {\n  onReset = () => {\n    this.props.gm.unsetWorld();\n  }\n  render() {\n    const { gm, store } = this.props;\n    const { world, isGameOver } = store;\n    if (!(world && isGameOver)) {\n      return '';\n    }\n    return (\n      <AbsoluteContainer>\n        <Row>\n          <h1>\n            {world.isInfinite() ? `\n              game over! you managed to complete ${gm.currentLevelIndex - 1} levels\n            ` : `\n              you win! your score is ${store.secondsElapsed}. try to get it lower!\n            `}\n          </h1>\n        </Row>\n        <Row>\n          <ReadyButton onClick={this.onReset}>RESET</ReadyButton>\n        </Row>\n      </AbsoluteContainer>\n    );\n  }\n}\n\nexport const ScoreView = connect(\n  (store: DataState) => ({\n    store,\n  })\n)(_ScoreView);\n","import { store } from \"../redux\";\nimport { setGameOver, setLevel, setTimer, setWorld } from \"../redux\";\nimport { Move, MoveInformation, Traveled, PlayableLevel, Point, Stopwatch, World, WorldLoader } from \"../utils\";\nimport { Sprite, Sprites } from './sprite';\n\nconst Color = {\n  background: 'white', // matching css\n  grid: 'black',\n  glow: 'rgba(150, 150, 255, 1)',\n};\n\nconst moveMap: { [code: string]: Move } = {\n  'ArrowLeft': Move.Left,\n  'ArrowRight': Move.Right,\n  'ArrowUp': Move.Up,\n  'ArrowDown': Move.Down,\n};\n\nexport interface Animation {\n  traveled: Traveled,\n  stopwatch: Stopwatch,\n}\n\nexport class GameManager {\n  dispatch = store.dispatch;\n  worldLoader: WorldLoader;\n  worldDimensions: Point;\n  canvasDimensions: Point;\n  canvasElm?: HTMLCanvasElement;\n  ctx?: CanvasRenderingContext2D;\n  world?: World;\n  stopwatch = new Stopwatch();\n  currentLevel: (PlayableLevel | undefined);\n  currentLevelIndex = 0;\n  spriteFacing: Move.Right;\n  loadedAssets: Promise<boolean>;\n  pendingAnimations: Array<Animation> = [];\n  shouldDrawGrid = false;\n\n  constructor() {\n    // determine canvas size\n    const screenHeight = document.body.clientHeight;\n    const screenWidth = document.body.clientWidth;\n    const isMobile = screenHeight > screenWidth;\n    const dimensions = isMobile ? new Point(8, 10) : new Point(10, 8);\n    const height = document.body.clientHeight * 0.8; // matching css of 80vh\n    let width = height * dimensions.x / dimensions.y;\n    while (width > screenWidth) {\n      dimensions.x -= 1;\n      width = height * dimensions.x / dimensions.y;\n    }\n    this.worldDimensions = dimensions;\n    this.worldLoader = new WorldLoader(this.worldDimensions);\n    this.canvasDimensions = new Point(width, height);\n\n    // setup key listeners\n    window.addEventListener('keydown', e => {\n      // console.log(e);\n      const move = moveMap[e.code] || undefined;\n      if (move) {\n        this.handleMove(move);\n      }\n      if (e.code === 'KeyR') {\n        this.clickReset();\n      }\n      if (e.code === 'KeyN') {\n        this.nextLevel();\n      }\n    });\n\n    // setup passive draw/load loop\n    this.loop();\n  }\n  private async loop() {\n    const { world, stopwatch } = this;\n    if (world) {\n      await this.draw();\n      if (world.isInfinite()) {\n        world.generateLevels();\n        if (stopwatch.getRemaining() !== store.getState().secondsRemaining) {\n          this.dispatch(setTimer(stopwatch));\n        }\n        if (stopwatch.getRemaining() < 0) {\n          this.triggerGameOver();\n        }\n      } else {\n        if (stopwatch.getElapsed() !== store.getState().secondsElapsed) {\n          this.dispatch(setTimer(stopwatch));\n        }\n      }\n    } else if (!store.getState().isGameOver) {\n      this.worldLoader.loadInBackground();\n    }\n    window.requestAnimationFrame(() => this.loop());\n  }\n\n  clickReset = () => {\n    this.currentLevel && this.currentLevel.reset();\n  }\n  clickToggleGrid = () => {\n    this.shouldDrawGrid = !this.shouldDrawGrid;\n  }\n  mouseMove = evt => {\n    const rect = evt.target.getBoundingClientRect();\n    const x = evt.clientX - rect.left;\n    const y = evt.clientY - rect.top;\n    const px = x / rect.width;\n    const py = y / rect.height;\n    const isTopRight = px > py;\n    const isTopLeft = px + py < 1;\n    const move = (\n      (isTopLeft && isTopRight && Move.Up) ||\n      (!isTopLeft && isTopRight && Move.Right) ||\n      (!isTopLeft && !isTopRight && Move.Down) ||\n      (isTopLeft && !isTopRight && Move.Left)\n    );\n    if (move) {\n      this.handleMove(move);\n    }\n  }\n  clickUp = () => {\n    this.handleMove(Move.Up);\n  }\n  clickDown = () => {\n    this.handleMove(Move.Down);\n  }\n  clickLeft = () => {\n    this.handleMove(Move.Left);\n  }\n  clickRight = () => {\n    this.handleMove(Move.Right);\n  }\n\n  setup(canvasElm: HTMLCanvasElement) {\n    this.canvasElm = canvasElm;\n    canvasElm.width = this.canvasDimensions.x;\n    canvasElm.height = this.canvasDimensions.y;\n    this.ctx = canvasElm.getContext('2d') as CanvasRenderingContext2D;\n  }\n  setWorld(world: World) {\n    this.worldLoader = new WorldLoader(this.worldDimensions);\n    this.world = world;\n    this.currentLevelIndex = 0;\n    this.stopwatch = world.createStopwatch();\n    this.nextLevel();\n    this.dispatch(setWorld(world));\n  }\n  unsetWorld() {\n    // todo score should dispatch this action\n    this.world = undefined;\n    this.dispatch(setWorld(undefined));\n  }\n  triggerGameOver() {\n    this.world = undefined;\n    this.dispatch(setGameOver());\n  }\n\n  handleMove(move: Move) {\n    const { currentLevel } = this;\n    if (!currentLevel) {\n      return;\n    }\n    const moveInfo = currentLevel.moveHero(move);\n    // sprite show face left/right or switch its current direction\n    this.spriteFacing = [Move.Left, Move.Right].includes(move) ? move : (\n      this.spriteFacing === Move.Right ? Move.Left : Move.Right\n    )\n    this.animateMove(moveInfo);\n    if (currentLevel.level.isWinningPoint(moveInfo.point)) {\n      this.nextLevel();\n    }\n  }\n  async nextLevel() {\n    const { currentLevelIndex, world } = this;\n    if (!world) {\n      throw new Error('todo this should be impossible');\n    }\n    // todo maybe keep animations between levels?\n    // this.pendingAnimations = [];\n    const nextLevel = await world.loadLevel(currentLevelIndex);\n    this.currentLevel = nextLevel && new PlayableLevel(nextLevel);\n    if (this.currentLevel) {\n      console.log(this.currentLevel.soln.printMoves());\n      this.dispatch(setLevel(this.currentLevelIndex));\n      this.currentLevelIndex += 1;\n      this.stopwatch.addTime(1000 * (world.progression.secondsPerLevel || 0));\n    } else {\n      this.triggerGameOver();\n    }\n  }\n\n  animateMove(moveInfo: MoveInformation) {\n    const animations = moveInfo.traveled.slice(0, -1).map((t, i, arr) => ({\n      traveled: t,\n      stopwatch: new Stopwatch(1000 * (1 + (i / arr.length))),\n    }));\n    this.pendingAnimations.push(...animations);\n  }\n  drawSprite(sprite: Sprite, x: number, y: number, scale?: number) {\n    const { canvasElm, ctx, currentLevel } = this;\n    const { width, height } = canvasElm;\n    const blockWidth = width / currentLevel.level.width;\n    const blockHeight = height / currentLevel.level.height;\n    scale = scale || 1;\n    ctx.drawImage(\n      sprite.image,\n      x * blockWidth + (blockWidth * (1 - scale) / 2),\n      y * blockHeight + (blockHeight * (1 - scale) / 2),\n      blockWidth * scale,\n      blockHeight * scale\n    );\n  }\n  drawSpriteWithOpacity(alpha: number, sprite: Sprite, x: number, y: number, scale?: number) {\n    const { ctx } = this;\n    const oldAlpha = ctx.globalAlpha;\n    ctx.globalAlpha = alpha;\n    this.drawSprite(sprite, x, y, scale);\n    ctx.globalAlpha = oldAlpha;\n  }\n  async draw() {\n    const { canvasElm, ctx, currentLevel } = this;\n    if (!canvasElm || !ctx) {\n      return;\n    }\n    const { width, height } = canvasElm;\n\n    await Sprites.loaded;\n\n    if (!currentLevel) {\n      return;\n    }\n\n    const blockWidth = width / currentLevel.level.width;\n    const blockHeight = height / currentLevel.level.height;\n\n    // background\n    ctx.fillStyle = Color.background;\n    ctx.fillRect(0, 0, width, height);\n    for (let y = 0; y < currentLevel.level.height; y++){\n      for (let x = 0; x < currentLevel.level.width; x++) {\n        let sprite = Sprites.groundIce5;\n        if (y === 0) {\n          sprite = Sprites.groundIce2;\n        }\n        if (y === currentLevel.level.height - 1) {\n          sprite = Sprites.groundIce8;\n        }\n        if (x === 0) {\n          sprite = Sprites.groundIce4;\n          if (y === 0) {\n            sprite = Sprites.groundIce1;\n          }\n          if (y === currentLevel.level.height - 1) {\n            sprite = Sprites.groundIce7;\n          }\n        }\n        if (x === currentLevel.level.width - 1) {\n          sprite = Sprites.groundIce6;\n          if (y === 0) {\n            sprite = Sprites.groundIce3;\n          }\n          if (y === currentLevel.level.height - 1) {\n            sprite = Sprites.groundIce9;\n          }\n        }\n        this.drawSprite(sprite, x, y);\n      }\n    }\n\n    // grid\n    if (this.shouldDrawGrid) {\n      ctx.strokeStyle = Color.grid;\n      for (let y = 1; y < currentLevel.level.height; y++) {\n        ctx.beginPath();\n        ctx.moveTo(0, y * blockHeight);\n        ctx.lineTo(width, y * blockHeight);\n        ctx.stroke();\n      }\n      for (let x = 1; x < currentLevel.level.width; x++) {\n        ctx.beginPath();\n        ctx.moveTo(x * blockWidth, 0);\n        ctx.lineTo(x * blockWidth, height);\n        ctx.stroke();\n      }\n    }\n\n    // ghosts\n    this.pendingAnimations = this.pendingAnimations.filter(a => a.stopwatch.getRemaining() > 0);\n    this.pendingAnimations.forEach(a => {\n      const { traveled, stopwatch } = a;\n      const opacity = stopwatch.getPercent();\n      this.drawSpriteWithOpacity(\n        opacity,\n        traveled.move === Move.Left ? Sprites.heroLeft : Sprites.heroRight, // todo this is buggy on up/dowh\n        traveled.point.x,\n        traveled.point.y,\n        1.2,\n      );\n    });\n\n    // start square\n    // ctx.fillStyle = 'grey';\n    // ctx.fillRect(currentLevel.level.start.x * blockWidth, currentLevel.level.start.y * blockHeight, blockWidth, blockHeight);\n\n    // goal square\n    this.drawSprite(Sprites.igloo, currentLevel.level.win.x, currentLevel.level.win.y);\n\n    // blocks\n    currentLevel.level.blocks.forEach(block => {\n      const sprite = (block.x + block.y) % 2 === 0 ? Sprites.treeLight : Sprites.treeHeavy;\n      this.drawSprite(sprite, block.x, block.y);\n    });\n\n    // hero\n    // ctx.strokeStyle = Color.glow;\n    // ctx.strokeRect(currentLevel.hero.point.x * blockWidth, currentLevel.hero.point.y * blockHeight, blockWidth, blockHeight);\n    this.drawSprite(\n      this.spriteFacing === Move.Left ? Sprites.heroLeft : Sprites.heroRight,\n      currentLevel.hero.point.x, currentLevel.hero.point.y, 1.2);\n  }\n}\n","import React from 'react';\nimport { AudioPlayer } from './AudioPlayer';\nimport { GameView } from './GameView';\nimport styled from 'styled-components';\nimport { MenuView } from './MenuView';\nimport { ScoreView } from './ScoreView';\nimport { connect } from 'react-redux';\nimport { DataState } from '../redux/reducers';\nimport { GameManager } from './manager';\n\nconst Container = styled.div`\n  max-width: 50vh;\n  margin: 0px auto;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  flex-wrap: nowrap;\n`;\n\nconst Canvas = styled.canvas`\n  height: 80vh;\n`;\n\ninterface Props {\n  store: DataState;\n}\n\nclass _App extends React.Component<Props> {\n  canvasRef: React.RefObject<HTMLCanvasElement>;\n  gm = new GameManager();\n\n  constructor(props: Props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const canvasElm = this.canvasRef.current;\n    if (canvasElm) {\n      this.gm.setup(canvasElm);\n    }\n  }\n\n  render() {\n    const { gm } = this;\n    return (\n      <Container>\n        <AudioPlayer />\n        <GameView gm={gm}>\n          <Canvas ref={this.canvasRef} />\n        </GameView>\n        <MenuView gm={gm} />\n        <ScoreView gm={gm} />\n      </Container>\n    );\n  }\n}\n\nexport const App = connect(\n  (store: DataState) => ({ store })\n)(_App);\n","import { Generator, Level, Point } from '../utils';\n\nfunction testLevelGen() {\n  const l1 = new Level(\n    5, 5, new Point(1, 1), new Point(3, 3), [\n      new Point(2, 4),\n    ]\n  );\n  console.log(l1.print())\n  console.log(l1.solve())\n\n  const l2 = new Level(\n    5, 5, new Point(1, 1), new Point(3, 3), [\n      new Point(4, 0),\n    ]\n  );\n  console.log(l2.print())\n  console.log(l2.solve())\n\n  const gen = new Generator(5, 5, 0.1, 5);\n  const levels = gen.generateLevels(10, 1000);\n  levels.forEach(l => {\n    console.log(l.level.print())\n    console.log('Solution:', l.soln.printMoves())\n    console.log('\\n');\n  });\n};\n\nexport default {\n  testLevelGen,\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './fe/App';\nimport './fe/index.css';\nimport { store } from './redux';\nimport scripts from './script';\n\n// debug scripts via the browser console\nwindow.scripts = scripts;\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}