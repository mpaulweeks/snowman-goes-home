{"version":3,"sources":["../../utils/dist/index.js","../../utils/dist/level.js","../../utils/dist/moves.js","../../utils/dist/point.js","../../utils/dist/gen.js","level.ts","manager.ts","GameView.tsx","App.jsx","index.js"],"names":["__export","m","p","exports","hasOwnProperty","Object","defineProperty","value","__webpack_require__","moves_1","Level","width","height","start","win","blocks","this","prototype","isWinningPoint","loc","equals","isIllegalPoint","some","b","x","y","applyMove","moveHistory","move","moves","length","current","point","next","clone","Move","Left","Right","Up","Down","solve","visited","queue","MoveHistory","getNextMoves","slice","counter","shift","key","toString","push","apply","print","_a","grid","_loop_1","row","_loop_2","_char","forEach","map","join","SolvableLevel","level","soln","Moves","keys","filter","k","isNaN","Number","last","addMove","updatePoint","_this","concat","printMoves","Point","other","randomWithin","exclude","newPoint","excludeKeys","reduce","Math","floor","random","fromString","str","parts","split","parseFloat","level_1","point_1","Generator","blockPercent","minMoves","tryGenerateLevel","bound","n","arr","i","range","_","solution","generateLevels","max","tries","levels","l","PlayableLevel","solved","classCallCheck","hero","createClass","moveMap","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","GameManager","canvasElm","ctx","currentLevel","getContext","window","addEventListener","e","code","undefined","handleMove","newLevel","moveHero","draw","console","log","fillStyle","fillRect","font","fillText","blockWidth","blockHeight","strokeStyle","beginPath","moveTo","lineTo","stroke","block","Canvas","styled","canvas","_templateObject","GameView","_React$Component","props","possibleConstructorReturn","getPrototypeOf","call","canvasRef","manager","React","createRef","inherits","react_default","a","createElement","ref","Component","Container","div","App_templateObject","ReactDOM","render","GameView_GameView","document","getElementById"],"mappings":"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","file":"static/js/main.7d84ce32.chunk.js","sourcesContent":["\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./gen\"));\n\n__export(require(\"./level\"));\n\n__export(require(\"./moves\"));\n\n__export(require(\"./point\"));","\"use strict\"; // https://repl.it/@mpaulweeks/ice\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar moves_1 = require(\"./moves\");\n\nvar Level =\n/** @class */\nfunction () {\n  function Level(width, height, start, win, blocks) {\n    this.width = width;\n    this.height = height;\n    this.start = start;\n    this.win = win;\n    this.blocks = blocks;\n  }\n\n  Level.prototype.isWinningPoint = function (loc) {\n    return this.win.equals(loc);\n  };\n\n  Level.prototype.isIllegalPoint = function (loc) {\n    var _a = this,\n        blocks = _a.blocks,\n        width = _a.width,\n        height = _a.height;\n\n    var hitBlock = blocks.some(function (b) {\n      return b.equals(loc);\n    });\n    return hitBlock || loc.x < 0 || loc.x >= width || loc.y < 0 || loc.y >= height;\n  };\n\n  Level.prototype.applyMove = function (moveHistory) {\n    var move = moveHistory.moves[moveHistory.moves.length - 1];\n    var current = moveHistory.point;\n\n    while (true) {\n      var next = current.clone();\n      if (move === moves_1.Move.Left) next.x--;else if (move === moves_1.Move.Right) next.x++;else if (move === moves_1.Move.Up) next.y--;else if (move === moves_1.Move.Down) next.y++;else throw \"unexpected move: \" + move;\n\n      if (this.isWinningPoint(next)) {\n        return next;\n      }\n\n      if (this.isIllegalPoint(next)) {\n        return current;\n      }\n\n      current = next;\n    }\n  };\n\n  Level.prototype.solve = function () {\n    var spawn = new moves_1.MoveHistory(this.start, []);\n    var visited = {};\n    var queue = spawn.getNextMoves().slice();\n    var counter = 0;\n\n    while (counter < 8000 && queue.length) {\n      counter++;\n      var next = queue.shift();\n      next.point = this.applyMove(next);\n\n      if (this.isWinningPoint(next.point)) {\n        return next;\n      }\n\n      var key = next.point.toString();\n\n      if (!visited[key]) {\n        queue.push.apply(queue, next.getNextMoves());\n        visited[key] = next;\n      }\n    }\n\n    return null;\n  };\n\n  Level.prototype.print = function () {\n    var _a = this,\n        width = _a.width,\n        height = _a.height,\n        start = _a.start,\n        win = _a.win,\n        blocks = _a.blocks;\n\n    var grid = [];\n\n    var _loop_1 = function _loop_1(y) {\n      var row = [];\n\n      var _loop_2 = function _loop_2(x) {\n        var _char = '_';\n\n        if (win.x === x && win.y === y) {\n          _char = 'W';\n        }\n\n        if (start.x === x && start.y === y) {\n          _char = 'S';\n        }\n\n        blocks.forEach(function (b) {\n          if (b.x === x && b.y === y) {\n            _char = '0';\n          }\n        });\n        row.push(_char);\n      };\n\n      for (var x = 0; x < width; x++) {\n        _loop_2(x);\n      }\n\n      grid.push(row);\n    };\n\n    for (var y = 0; y < height; y++) {\n      _loop_1(y);\n    }\n\n    return grid.map(function (row) {\n      return row.join('');\n    }).join('\\n');\n  };\n\n  return Level;\n}();\n\nexports.Level = Level;\n\nvar SolvableLevel =\n/** @class */\nfunction () {\n  function SolvableLevel(level, soln) {\n    this.level = level;\n    this.soln = soln;\n  }\n\n  return SolvableLevel;\n}();\n\nexports.SolvableLevel = SolvableLevel;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Move;\n\n(function (Move) {\n  Move[Move[\"Up\"] = 1] = \"Up\";\n  Move[Move[\"Down\"] = 2] = \"Down\";\n  Move[Move[\"Left\"] = 3] = \"Left\";\n  Move[Move[\"Right\"] = 4] = \"Right\";\n})(Move = exports.Move || (exports.Move = {}));\n\n;\nexports.Moves = Object.keys(Move).filter(function (k) {\n  return isNaN(Number(k));\n}).map(function (k) {\n  return Move[k];\n});\n\nvar MoveHistory =\n/** @class */\nfunction () {\n  function MoveHistory(point, moves) {\n    this.point = point;\n    this.moves = moves;\n  }\n\n  MoveHistory.prototype.last = function () {\n    return this.moves[this.moves.length - 1];\n  };\n\n  MoveHistory.prototype.addMove = function (move) {\n    this.moves.push(move);\n  };\n\n  MoveHistory.prototype.updatePoint = function (point) {\n    // todo point history?\n    this.point = point;\n  };\n\n  MoveHistory.prototype.getNextMoves = function () {\n    var _this = this;\n\n    var last = this.last();\n    return exports.Moves.filter(function (m) {\n      return m !== last;\n    }).map(function (m) {\n      return new MoveHistory(_this.point, _this.moves.concat([m]));\n    });\n  };\n\n  MoveHistory.prototype.printMoves = function () {\n    return this.moves.map(function (k) {\n      return Move[k];\n    }).join(', ');\n  };\n\n  return MoveHistory;\n}();\n\nexports.MoveHistory = MoveHistory;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Point =\n/** @class */\nfunction () {\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype.clone = function () {\n    return new Point(this.x, this.y);\n  };\n\n  Point.prototype.toString = function () {\n    return this.x + \",\" + this.y;\n  };\n\n  Point.prototype.equals = function (other) {\n    return this.toString() === other.toString();\n  };\n\n  Point.prototype.randomWithin = function (exclude) {\n    var newPoint;\n    var excludeKeys = exclude.reduce(function (map, p) {\n      map[p.toString()] = true;\n      return map;\n    }, {});\n\n    while (!newPoint || excludeKeys[newPoint.toString()]) {\n      newPoint = new Point(Math.floor(Math.random() * this.x), Math.floor(Math.random() * this.y));\n    }\n\n    return newPoint;\n  };\n\n  Point.fromString = function (str) {\n    var parts = str.split(',');\n    return new Point(parseFloat(parts[0]), parseFloat(parts[1]));\n  };\n\n  return Point;\n}();\n\nexports.Point = Point;\n;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar level_1 = require(\"./level\");\n\nvar point_1 = require(\"./point\");\n\nfunction range(n) {\n  var arr = [];\n\n  for (var i = 0; i < n; i++) {\n    arr.push(i);\n  }\n\n  return arr;\n}\n\nvar Generator =\n/** @class */\nfunction () {\n  function Generator(width, height, blockPercent, minMoves) {\n    this.width = width;\n    this.height = height;\n    this.blockPercent = blockPercent;\n    this.minMoves = minMoves;\n  }\n\n  Generator.prototype.tryGenerateLevel = function () {\n    var _a = this,\n        width = _a.width,\n        height = _a.height,\n        blockPercent = _a.blockPercent,\n        minMoves = _a.minMoves;\n\n    var bound = new point_1.Point(width, height);\n    var win = bound.randomWithin([]);\n    var start = bound.randomWithin([win]);\n    var blocks = range(width * height * blockPercent).map(function (_) {\n      return bound.randomWithin([win, start]);\n    });\n    var level = new level_1.Level(width, height, start, win, blocks);\n    var solution = level.solve();\n    return solution && solution.moves.length > minMoves ? new level_1.SolvableLevel(level, solution) : null;\n  };\n\n  Generator.prototype.generateLevels = function (max, tries) {\n    var levels = [];\n\n    for (var i = 0; levels.length < max && i < tries; i++) {\n      var l = this.tryGenerateLevel();\n\n      if (l) {\n        levels.push(l);\n      }\n    }\n\n    return levels;\n  };\n\n  return Generator;\n}();\n\nexports.Generator = Generator;","import { Level, Move, MoveHistory, SolvableLevel } from \"ice-puzzle-utils\";\n\nexport class PlayableLevel {\n  level: Level;\n  soln: MoveHistory;\n  hero: MoveHistory;\n\n  constructor(solved: SolvableLevel) {\n    this.level = solved.level;\n    this.soln = solved.soln;\n    this.hero = new MoveHistory(this.level.start, []);\n  }\n\n  moveHero(move: Move) {\n    const { level, hero } = this;\n    hero.addMove(move);\n    const newPoint = level.applyMove(hero);\n    hero.updatePoint(newPoint);\n  }\n}\n","import { Generator, Move } from \"ice-puzzle-utils\";\nimport { PlayableLevel } from \"./level\";\n\nconst moveMap: { [code: string]: Move } = {\n  'ArrowLeft': Move.Left,\n  'ArrowRight': Move.Right,\n  'ArrowUp': Move.Up,\n  'ArrowDown': Move.Down,\n};\n\nexport class GameManager {\n  canvasElm: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n  currentLevel: (PlayableLevel | undefined);\n\n  constructor(canvasElm: HTMLCanvasElement) {\n    this.canvasElm = canvasElm;\n    canvasElm.width = 800;\n    canvasElm.height = 600;\n    this.ctx = canvasElm.getContext('2d') as CanvasRenderingContext2D;\n\n    window.addEventListener('keydown', e => {\n      // console.log(e);\n      const move = moveMap[e.code] || undefined;\n      if (move) {\n        this.handleMove(move);\n      }\n      if (e.code === 'KeyR') {\n        this.newLevel();\n      }\n    });\n  }\n\n  handleMove(move: Move) {\n    const { currentLevel } = this;\n    if (!currentLevel) {\n      return;\n    }\n    currentLevel.moveHero(move);\n    this.draw();\n  }\n  newLevel() {\n    const generator = new Generator(10, 8, Math.random() * 0.1 + 0.2, Math.random() * 10 + 5);\n    const newLevel = generator.generateLevels(1, 1000)[0];\n    if (newLevel) {\n      console.log('solution:', newLevel.soln.printMoves());\n    }\n    this.currentLevel = newLevel && new PlayableLevel(newLevel);\n    this.draw();\n  }\n\n  draw() {\n    const { canvasElm, ctx, currentLevel } = this;\n    const { width, height } = canvasElm;\n\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, width, height);\n\n    if (!currentLevel) {\n      ctx.font = '20px monospace';\n      ctx.fillStyle = 'white';\n      ctx.fillText('making level failed, try again', 100, 100);\n      return;\n    }\n\n    const blockWidth = width / currentLevel.level.width;\n    const blockHeight = height / currentLevel.level.height;\n\n    // grid\n    ctx.strokeStyle = 'white';\n    for (let y = 0; y < currentLevel.level.height; y++) {\n      ctx.beginPath();\n      ctx.moveTo(0, y * blockHeight);\n      ctx.lineTo(width, y * blockHeight);\n      ctx.stroke();\n    }\n    for (let x = 0; x < currentLevel.level.width; x++) {\n      ctx.beginPath();\n      ctx.moveTo(x * blockWidth, 0);\n      ctx.lineTo(x * blockWidth, height);\n      ctx.stroke();\n    }\n\n    ctx.fillStyle = 'yellow';\n    ctx.fillRect(currentLevel.level.start.x * blockWidth, currentLevel.level.start.y * blockHeight, blockWidth, blockHeight);\n\n    ctx.fillStyle = 'lightgreen';\n    ctx.fillRect(currentLevel.level.win.x * blockWidth, currentLevel.level.win.y * blockHeight, blockWidth, blockHeight);\n\n    ctx.fillStyle = 'grey';\n    currentLevel.level.blocks.forEach(block => {\n      ctx.fillRect(block.x * blockWidth, block.y * blockHeight, blockWidth, blockHeight);\n    });\n\n    ctx.fillStyle = 'white';\n    ctx.fillRect(\n      currentLevel.hero.point.x * blockWidth + blockWidth * 0.2,\n      currentLevel.hero.point.y * blockHeight + blockHeight * 0.2,\n      blockWidth * 0.6,\n      blockHeight * 0.6\n    );\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { GameManager } from './manager';\n\nconst Canvas = styled.canvas`\n  width: 800px;\n  height: 600px;\n`;\n\ninterface Props { }\n\nexport class GameView extends React.Component<Props> {\n  canvasRef: React.RefObject<HTMLCanvasElement>;\n  manager: (GameManager | undefined) = undefined;\n\n  constructor(props: Props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const canvasElm = this.canvasRef.current;\n    if (canvasElm) {\n      this.manager = new GameManager(canvasElm);\n      this.manager.newLevel();\n    }\n  }\n\n  render() {\n    return (\n      <Canvas ref={this.canvasRef} >\n      </Canvas>\n    );\n  }\n}\n","import React from 'react';\nimport { GameView } from './GameView';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  padding: 2rem;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  flex-wrap: nowrap;\n`;\n\nexport function App() {\n  return (\n    <Container>\n      <h1>\n        ice slide puzzle game\n      </h1>\n      <p>\n        use arrow keys to move, R key to make new level\n      </p>\n      <GameView />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}